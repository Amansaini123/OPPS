// Usually friend function have argument as objects
// Friend Function is not a member of any class hence can be define without scope resolution
// Usually while defining friend function outside the class keyword friend is not used 
// A friend function of class is define outside the class but it has right to access all private 
// and protected member 

// Even though prototype of friend function appears in class definination it is not a member of any class

#include<bits/stdc++.h>
using namespace std;

// Forward declaration
class A;

class B{
  int b;
  
  public:
    void getval(int x){
        b=x;
    }
    void putval(){
        cout<<b<<endl;
    }
    friend void add(A,B);
};


class A{
  int a;
  public:
    void getval(int x){
        a=x;
    }
    void putval(){
        cout<<a<<endl;
    }
    friend void add(A,B);
};


// defining the friend function outside as it is not a member of any class
// No need to use keyword friend or class name as friend is not a member of any class

void add(A x,B y){
    cout<<x.a+y.b;
}

int main()
{
    A a;
    B b;
    
    a.getval(100);
    b.getval(200);
    
    add(a,b);
}

















